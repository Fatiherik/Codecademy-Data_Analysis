{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red129\green131\blue134;\red23\green23\blue23;\red255\green255\blue255;
\red164\green191\blue255;\red252\green115\blue96;\red117\green255\blue242;\red254\green219\blue112;}
{\*\expandedcolortbl;;\cssrgb\c57647\c58431\c59608;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c70196\c80000\c100000;\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c100000\c87843\c51373;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 codecademylib\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Import matplotlib pyplot\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 matplotlib\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pyplot\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 mu\cf4 \strokec4 , \cf6 \strokec6 sigma\cf4 \strokec4  = \cf6 \strokec6 800\cf4 \strokec4 , \cf6 \strokec6 100\cf4 \strokec4  \cf2 \strokec2 # mean and standard deviation\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 burrito_calories\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 random\cf4 \strokec4 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf6 \strokec6 mu\cf4 \strokec4 , \cf6 \strokec6 sigma\cf4 \strokec4 , \cf6 \strokec6 320\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 (\cf6 \strokec6 burrito_calories\cf4 \strokec4 , range=(\cf6 \strokec6 250\cf4 \strokec4 , \cf6 \strokec6 1250\cf4 \strokec4 ), \cf6 \strokec6 bins\cf4 \strokec4 =\cf6 \strokec6 100\cf4 \strokec4 ,  \cf6 \strokec6 edgecolor\cf4 \strokec4 =\cf8 \strokec8 'black'\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 title\cf4 \strokec4 (\cf8 \strokec8 "Calories in a Burrito Bowl"\cf4 \strokec4 , \cf6 \strokec6 fontsize\cf4 \strokec4  = \cf6 \strokec6 24\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 xlabel\cf4 \strokec4 (\cf8 \strokec8 "Calories"\cf4 \strokec4 , \cf6 \strokec6 fontsize\cf4 \strokec4 =\cf6 \strokec6 18\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylabel\cf4 \strokec4 (\cf8 \strokec8 "Count"\cf4 \strokec4 , \cf6 \strokec6 fontsize\cf4 \strokec4 =\cf6 \strokec6 18\cf4 \strokec4 )\cb1 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show\cf4 \strokec4 ()\cb1 \
\
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 .\cf7 \strokec7 drop\cf4 \strokec4 ([\cf8 \strokec8 "Unnamed: 0"\cf4 \strokec4 ], \cf6 \strokec6 axis\cf4 \strokec4  = \cf6 \strokec6 1\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 cost\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Cost"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 # \cf6 \strokec6 Print\cf4 \strokec4  \cf6 \strokec6 transactions\cf4 \strokec4  \cf6 \strokec6 below\cf4 \cb1 \strokec4 \
\cb3 print(\cf6 \strokec6 transactions\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Print the average times below\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 average\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 ))\cb1 \
\
\
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Save transaction data to numpy arrays\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 \strokec7 cost\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Cost"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 # \cf6 \strokec6 Find\cf4 \strokec4  \cf6 \strokec6 the\cf4 \strokec4  \cf6 \strokec6 minimum\cf4 \strokec4  \cf6 \strokec6 time\cf4 \strokec4 , \cf6 \strokec6 maximum\cf4 \strokec4  \cf6 \strokec6 time\cf4 \strokec4 , \cf5 \strokec5 and\cf4 \strokec4  range\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf6 \cb3 \strokec6 min_time\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amin\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 max_time\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amax\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 range_time\cf4 \strokec4  = \cf6 \strokec6 max_time\cf4 \strokec4 -\cf6 \strokec6 min_time\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Printing the values\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf8 \strokec8 "Earliest Time: "\cf4 \strokec4  + str(\cf6 \strokec6 min_time\cf4 \strokec4 ))\cb1 \
\cb3 print(\cf8 \strokec8 "Latest Time: "\cf4 \strokec4  + str(\cf6 \strokec6 max_time\cf4 \strokec4 ))\cb1 \
\cb3 print(\cf8 \strokec8 "Time Range: "\cf4 \strokec4  + str(\cf6 \strokec6 range_time\cf4 \strokec4 ))\cb1 \
\
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Array of days old bread\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 days_old_bread\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 array\cf4 \strokec4 ([\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 8\cf4 \strokec4 , \cf6 \strokec6 7\cf4 \strokec4 , \cf6 \strokec6 8\cf4 \strokec4 , \cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 2\cf4 \strokec4 , \cf6 \strokec6 3\cf4 \strokec4 , \cf6 \strokec6 5\cf4 \strokec4 , \cf6 \strokec6 6\cf4 \strokec4 , \cf6 \strokec6 2\cf4 \strokec4 ])\cb1 \
\
\cf2 \cb3 \strokec2 # Set the minimum and maximums of the array below\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 max_days_old\cf4 \strokec4 =\cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amax\cf4 \strokec4 (\cf6 \strokec6 days_old_bread\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 min_days_old\cf4 \strokec4 =\cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amin\cf4 \strokec4 (\cf6 \strokec6 days_old_bread\cf4 \strokec4 )\cb1 \
\
\
\cf2 \cb3 \strokec2 # Set the number of bins to 3\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 bins\cf4 \strokec4 =\cf6 \strokec6 3\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Calculate the bin range\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 try\cf4 \strokec4 :\cb1 \
\cb3   \cf6 \strokec6 bin_range\cf4 \strokec4  = (\cf6 \strokec6 max_days_old\cf4 \strokec4  - \cf6 \strokec6 min_days_old\cf4 \strokec4  + \cf6 \strokec6 1\cf4 \strokec4 ) / \cf6 \strokec6 bins\cf4 \cb1 \strokec4 \
\cb3   print(\cf8 \strokec8 "Bins: "\cf4 \strokec4  + str(\cf6 \strokec6 bins\cf4 \strokec4 ))\cb1 \
\cb3   print(\cf8 \strokec8 "Bin Width: "\cf4 \strokec4  + str(\cf6 \strokec6 bin_range\cf4 \strokec4 ))\cb1 \
\cf2 \cb3 \strokec2 # Printing the values\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 except\cf4 \strokec4 :\cb1 \
\cb3   print(\cf8 \strokec8 "You have not set the min, max, or bins values yet."\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Array of days old bread\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 days_old_bread\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 array\cf4 \strokec4 ([\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 8\cf4 \strokec4 , \cf6 \strokec6 7\cf4 \strokec4 , \cf6 \strokec6 8\cf4 \strokec4 , \cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 2\cf4 \strokec4 , \cf6 \strokec6 3\cf4 \strokec4 , \cf6 \strokec6 5\cf4 \strokec4 , \cf6 \strokec6 6\cf4 \strokec4 , \cf6 \strokec6 2\cf4 \strokec4 ])\cb1 \
\
\cf2 \cb3 \strokec2 # Count the values in each bin \cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 days_old_012\cf4 \strokec4  = \cf6 \strokec6 4\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 days_old_345\cf4 \strokec4  = \cf6 \strokec6 2\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 days_old_678\cf4 \strokec4  = \cf6 \strokec6 4\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Printing the values\cf4 \cb1 \strokec4 \
\cb3 print(\cf8 \strokec8 "Between 0 and 2 days: "\cf4 \strokec4  + str(\cf6 \strokec6 days_old_012\cf4 \strokec4 ))\cb1 \
\cb3 print(\cf8 \strokec8 "Between 3 and 5 days: "\cf4 \strokec4  + str(\cf6 \strokec6 days_old_345\cf4 \strokec4 ))\cb1 \
\cb3 print(\cf8 \strokec8 "Between 6 and 8 days: "\cf4 \strokec4  + str(\cf6 \strokec6 days_old_678\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\
\cb3 # \cf6 \strokec6 Use\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4 .\cf7 \strokec7 histogram\cf4 \strokec4 () \cf6 \strokec6 below\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 times_hist\cf4 \strokec4  = \cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 histogram\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 , range=(\cf6 \strokec6 0\cf4 \strokec4 ,\cf6 \strokec6 24\cf4 \strokec4 ),\cf6 \strokec6 bins\cf4 \strokec4 =\cf6 \strokec6 4\cf4 \strokec4 )\cb1 \
\
\cb3 print(\cf6 \strokec6 times_hist\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97 \cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 codecademylib\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # import pyplot as plt\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 matplotlib\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pyplot\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\
\cb3 # \cf6 \strokec6 Use\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 () \cf6 \strokec6 below\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 , range = (\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 24\cf4 \strokec4 ), \cf6 \strokec6 bins\cf4 \strokec4  = \cf6 \strokec6 4\cf4 \strokec4 , \cf6 \strokec6 edgecolor\cf4 \strokec4 =\cf8 \strokec8 'black'\cf4 \strokec4 )\cb1 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 title\cf4 \strokec4 (\cf8 \strokec8 "Bussiest time"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 xlabel\cf4 \strokec4 (\cf8 \strokec8 "Hours"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylabel\cf4 \strokec4 (\cf8 \strokec8 "# of Customer"\cf4 \strokec4 )\cb1 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 codecademylib\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 matplotlib\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pyplot\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\
\cb3 # \cf6 \strokec6 Use\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 () \cf6 \strokec6 below\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 (\cf6 \strokec6 times\cf4 \strokec4 , range=(\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 24\cf4 \strokec4 ), \cf6 \strokec6 bins\cf4 \strokec4 =\cf6 \strokec6 24\cf4 \strokec4 ,  \cf6 \strokec6 edgecolor\cf4 \strokec4 =\cf8 \strokec8 "black"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 title\cf4 \strokec4 (\cf8 \strokec8 "Weekday Frequency of Customers"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 xlabel\cf4 \strokec4 (\cf8 \strokec8 "Hours (1 hour increments)"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylabel\cf4 \strokec4 (\cf8 \strokec8 "Count"\cf4 \strokec4 )\cb1 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97\cf2 \cb3 \strokec2 # Import packages\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 codecademylib\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 numpy\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 np\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pandas\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 pd\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Import matplotlib pyplot\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf6 \strokec6 matplotlib\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  \cf6 \strokec6 pyplot\cf4 \strokec4  \cf5 \strokec5 as\cf4 \strokec4  \cf6 \strokec6 plt\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # Read in transactions data\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 transactions\cf4 \strokec4  = \cf6 \strokec6 pd\cf4 \strokec4 .\cf7 \strokec7 read_csv\cf4 \strokec4 (\cf8 \strokec8 "transactions.csv"\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 # Save transaction times to a separate numpy array\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 times\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Transaction Time"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 cost\cf4 \strokec4  = \cf6 \strokec6 transactions\cf4 \strokec4 [\cf8 \strokec8 "Cost"\cf4 \strokec4 ].\cf7 \strokec7 values\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 max_cost\cf4 \strokec4 =\cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amax\cf4 \strokec4 (\cf6 \strokec6 cost\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 min_cost\cf4 \strokec4 =\cf6 \strokec6 np\cf4 \strokec4 .\cf7 \strokec7 amin\cf4 \strokec4 (\cf6 \strokec6 cost\cf4 \strokec4 )\cb1 \
\cb3 print(\cf6 \strokec6 max_cost\cf4 \strokec4 ,\cf6 \strokec6 min_cost\cf4 \strokec4 )\cb1 \
\
\cf2 \cb3 \strokec2 # Use plt.hist() below\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 hist\cf4 \strokec4 (\cf6 \strokec6 cost\cf4 \strokec4 , range=(\cf6 \strokec6 0\cf4 \strokec4 , \cf6 \strokec6 165\cf4 \strokec4 ), \cf6 \strokec6 bins\cf4 \strokec4 =\cf6 \strokec6 11\cf4 \strokec4 ,  \cf6 \strokec6 edgecolor\cf4 \strokec4 =\cf8 \strokec8 "black"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 title\cf4 \strokec4 (\cf8 \strokec8 "Cost-Count"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 xlabel\cf4 \strokec4 (\cf8 \strokec8 "Cost"\cf4 \strokec4 )\cb1 \
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 ylabel\cf4 \strokec4 (\cf8 \strokec8 "Count"\cf4 \strokec4 )\cb1 \
\
\cf6 \cb3 \strokec6 plt\cf4 \strokec4 .\cf7 \strokec7 show\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97}