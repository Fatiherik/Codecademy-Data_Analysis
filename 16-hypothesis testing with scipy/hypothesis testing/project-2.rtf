— import numpy as np
import fetchmaker
from scipy.stats import binom_test

rottweiler_tl=fetchmaker.get_tail_length('rottweiler')
rottweiler_tl_mean=np.mean(rottweiler_tl)
rottweiler_tl_std=np.std(rottweiler_tl)

print(rottweiler_tl_mean)
print(rottweiler_tl_std)

whippet_rescue=fetchmaker.get_is_rescue('whippet')

num_whippet_rescues=np.count_nonzero(whippet_rescue)
print(num_whippet_rescues)

num_whippets=np.size(whippet_rescue)
print(num_whippets)

pval = binom_test(num_whippet_rescues, n=num_whippets, p=0.08)
print(pval)

—import numpy as np
import fetchmaker
from scipy.stats import binom_test
from scipy.stats import f_oneway

whippets_w=fetchmaker.get_weight('whippet')
terriers_w=fetchmaker.get_weight('terrier')
pitbulls_w=fetchmaker.get_weight('pitbull')

fstat, pval = f_oneway(whippets_w,terriers_w,pitbulls_w)
print(pval)

— import numpy as np
import fetchmaker
from scipy.stats import binom_test
from scipy.stats import f_oneway
from statsmodels.stats.multicomp import pairwise_tukeyhsd

whippets_w=fetchmaker.get_weight('whippet')
terriers_w=fetchmaker.get_weight('terrier')
pitbulls_w=fetchmaker.get_weight('pitbull')

v = np.concatenate([whippets_w, terriers_w, pitbulls_w])
labels = ['whippets_w'] * len(whippets_w) + ['terriers_w'] * len(terriers_w) + ['pitbulls_w'] * len(pitbulls_w)

tukey_results = pairwise_tukeyhsd(v, labels, 0.05)
print(tukey_results)

—import numpy as np
import fetchmaker
from scipy.stats import binom_test
from scipy.stats import f_oneway
from statsmodels.stats.multicomp import pairwise_tukeyhsd
from scipy.stats import chi2_contingency


poodle_colors=fetchmaker.get_color('poodle')
shihtzu_colors=fetchmaker.get_color('shihtzu')

a1=np.count_nonzero(poodle_colors == "brown")
b1=np.count_nonzero(poodle_colors == "black")
c1=np.count_nonzero(poodle_colors == "gold")
d1=np.count_nonzero(poodle_colors == "grey")
e1=np.count_nonzero(poodle_colors == "white")

a2=np.count_nonzero(shihtzu_colors == "brown")
b2=np.count_nonzero(shihtzu_colors == "black")
c2=np.count_nonzero(shihtzu_colors == "gold")
d2=np.count_nonzero(shihtzu_colors == "grey")
e2=np.count_nonzero(shihtzu_colors == "white")

X = [[a1, a2],
     [b1, b2],
     [c1, c2],
     [d1, d2],
     [e1, e2]]
chi2, pval, dof, expected = chi2_contingency(X)
print pval



